/* Generated by the Nim Compiler v1.6.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554435 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI1056965396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964797 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1056964782 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1056964942 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964793 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1056964781 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1056965177 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI905969736 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI905969743 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1056964913 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1073741827 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI1073741828 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056965083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469762052 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056965104 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1056964800 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1056964783 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1056964789 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1056964785 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1056964784 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056965077 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1056964611 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1056965073 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1056965070 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056965069 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI671088652 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI671088644 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI469762051 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469762054 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469762053 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555129.base = NTI33555113;
var NNI469762053 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI469762053, name: "gsNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI469762053, name: "gsInitial", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI469762053, name: "gsTetris", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI469762053, name: "gsDone", len: 0, sons: null}}};
NTI469762053.node = NNI469762053;
var NNI469762051 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI469762051.node = NNI469762051;
var NNI671088652 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI671088652.node = NNI671088652;
NTI671088644.base = NTI671088652;
var NNI1023410180 = {kind: 1, offset: "background", len: 0, typ: NTI671088644, name: "background", sons: null};
NTI1023410180.node = NNI1023410180;
NTI1023410179.base = NTI1023410180;
var NNI1056964611 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1056964611, name: "tetNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1056964611, name: "tetI", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1056964611, name: "tetJ", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1056964611, name: "tetL", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1056964611, name: "tetO", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1056964611, name: "tetS", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1056964611, name: "tetZ", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1056964611, name: "tetT", len: 0, sons: null}}};
NTI1056964611.node = NNI1056964611;
NTI1056965073.base = NTI1056964611;
NTI1056964785.base = NTI1056964789;
NTI1056964783.base = NTI1056964800;
var NNI1056964784 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1056964611, name: "kind", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI1056964785, name: "pos", sons: null}, 
{kind: 1, offset: "rot", len: 0, typ: NTI1056964783, name: "rot", sons: null}]};
NTI1056964784.node = NNI1056964784;
NTI1056965077.base = NTI1056964784;
NTI1056965104.base = NTI1056964611;
var NNI1056965070 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "board", len: 0, typ: NTI1056965073, name: "board", sons: null}, 
{kind: 1, offset: "nextPieces", len: 0, typ: NTI1056965077, name: "nextPieces", sons: null}, 
{kind: 1, offset: "piece", len: 0, typ: NTI1056964784, name: "piece", sons: null}, 
{kind: 1, offset: "pieceDropTicking", len: 0, typ: NTI33554466, name: "pieceDropTicking", sons: null}, 
{kind: 1, offset: "pieceDropTick", len: 0, typ: NTI33554456, name: "pieceDropTick", sons: null}, 
{kind: 1, offset: "pieceDropTime", len: 0, typ: NTI33554456, name: "pieceDropTime", sons: null}, 
{kind: 1, offset: "pieceDropTickMultiplier", len: 0, typ: NTI33554456, name: "pieceDropTickMultiplier", sons: null}, 
{kind: 1, offset: "pieceDropRetry", len: 0, typ: NTI33554456, name: "pieceDropRetry", sons: null}, 
{kind: 1, offset: "pieceDropRetries", len: 0, typ: NTI33554456, name: "pieceDropRetries", sons: null}, 
{kind: 1, offset: "holdPiece", len: 0, typ: NTI1056964784, name: "holdPiece", sons: null}, 
{kind: 1, offset: "justHeld", len: 0, typ: NTI33554466, name: "justHeld", sons: null}, 
{kind: 1, offset: "randBuffer", len: 0, typ: NTI1056965104, name: "randBuffer", sons: null}, 
{kind: 1, offset: "randBufferPos", len: 0, typ: NTI33554456, name: "randBufferPos", sons: null}]};
NTI1056965070.node = NNI1056965070;
NTI1056965069.base = NTI1056965070;
var NNI469762052 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI469762052.node = NNI469762052;
var NNI469762054 = {kind: 3, offset: "kind", len: 4, typ: NTI469762053, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "none", len: 0, typ: NTI469762051, name: "none", sons: null}], 
[setConstr(1), {kind: 1, offset: "initial", len: 0, typ: NTI1023410179, name: "initial", sons: null}], 
[setConstr(2), {kind: 1, offset: "tetris", len: 0, typ: NTI1056965069, name: "tetris", sons: null}], 
[setConstr(3), {kind: 1, offset: "done", len: 0, typ: NTI469762052, name: "done", sons: null}]]};
NTI469762054.node = NNI469762054;
var NNI1056965083 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1056964611, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1056964611, name: "b", sons: null}]};
NTI1056965083.node = NNI1056965083;
var NNI1073741828 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI1073741827, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI1073741827, name: "a1", sons: null}]};
NTI1073741828.node = NNI1073741828;
var NNI1056964907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1056964907.node = NNI1056964907;
var NNI1056964913 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1056964913.node = NNI1056964913;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI905969743 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI905969736, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI905969743.node = NNI905969743;
NTI1056965177.base = NTI1056964784;
NTI1056964781.base = NTI1056964793;
var NNI1056964942 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1056964781, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1056964781, name: "b", sons: null}]};
NTI1056964942.node = NNI1056964942;
NTI1056964782.base = NTI1056964797;
var NNI1056964966 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1056964782, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1056964782, name: "b", sons: null}]};
NTI1056964966.node = NNI1056964966;
var NNI1056965396 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1056965396.node = NNI1056965396;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(0);

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function raiseFieldError2(f_33556778, discVal_33556779) {
    raiseException({message: (f_33556778 || []).concat(discVal_33556779 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet2 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function nimBoolToStr(x_33556514) {
  var result_33556515 = [];

    if (x_33556514) {
    result_33556515 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556515 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556515;

}

function reprDiscriminant(e_33557409, typ_33557410) {
    var Temporary1;

  var result_33557411 = [];

    switch (typ_33557410.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557409, typ_33557410);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557409 == 0)));
      break;
    default: 
      Temporary1 = HEX24_318767107(e_33557409);
      break;
    }
    result_33557411 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557411;

}
var ConstSet3 = setConstr(2);
var ConstSet4 = setConstr(3);
var ConstSet5 = setConstr(0);
var ConstSet6 = setConstr(1);
var ConstSet7 = setConstr(1);

function arrayConstr(len_33557179, value_33557180, typ_33557181) {
        var result = new Array(len_33557179);
    for (var i = 0; i < len_33557179; ++i) result[i] = nimCopy(null, value_33557180, typ_33557181);
    return result;
  

  
}

function nimMax(a_33556998, b_33556999) {
    var Temporary1;

  var result_33557000 = 0;

  BeforeRet: do {
    if ((b_33556999 <= a_33556998)) {
    Temporary1 = a_33556998;
    }
    else {
    Temporary1 = b_33556999;
    }
    
    result_33557000 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557000;

}
                      var helper_1073741878 = new Uint32Array([3198944359, 3630892171]);
    var minDims_1056965056 = [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: -1}, {Field0: -1, Field1: -1}, {Field0: 0, Field1: 0}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: 0}];
var ConstSet8 = setConstr(2, 3);
        var pieceExtensions_1056964663 = [[], [{Field0: 0, Field1: 1}, {Field0: 0, Field1: 2}, {Field0: 0, Field1: 3}], [{Field0: 0, Field1: -1}, {Field0: 1, Field1: -1}, {Field0: 0, Field1: 1}], [{Field0: -1, Field1: -1}, {Field0: 0, Field1: -1}, {Field0: 0, Field1: 1}], [{Field0: 0, Field1: 1}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: 1}], [{Field0: -1, Field1: 1}, {Field0: 0, Field1: 1}, {Field0: 1, Field1: 0}], [{Field0: -1, Field1: 0}, {Field0: 0, Field1: 1}, {Field0: 1, Field1: 1}], [{Field0: -1, Field1: 0}, {Field0: 0, Field1: 1}, {Field0: 1, Field1: 0}]];
var ConstSet9 = setConstr(2);
var ConstSet10 = setConstr(3);
var ConstSet11 = setConstr(0);

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet12 = setConstr(2);
var ConstSet13 = setConstr(2);
var ConstSet14 = setConstr(2);
var ConstSet15 = setConstr(2);
var ConstSet16 = setConstr(2);
var ConstSet17 = setConstr(2);
var ConstSet18 = setConstr(2);
var ConstSet19 = setConstr(2);
var ConstSet20 = setConstr(2);
var ConstSet21 = setConstr(2);
var ConstSet22 = setConstr(2);
var ConstSet23 = setConstr(2);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(2);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(2);
var ConstSet31 = setConstr(2);
var ConstSet32 = setConstr(2);
var ConstSet33 = setConstr(2);
var ConstSet34 = setConstr(2);
var ConstSet35 = setConstr(2);
var ConstSet36 = setConstr(2);

function nimMin(a_33556994, b_33556995) {
    var Temporary1;

  var result_33556996 = 0;

  BeforeRet: do {
    if ((a_33556994 <= b_33556995)) {
    Temporary1 = a_33556994;
    }
    else {
    Temporary1 = b_33556995;
    }
    
    result_33556996 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556996;

}
var ConstSet37 = setConstr(3);
var ConstSet38 = setConstr(0);
var ConstSet39 = setConstr(1);
var ConstSet40 = setConstr(2);
var ConstSet41 = setConstr(3);
var ConstSet42 = setConstr(0);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(2);
var ConstSet45 = setConstr(3);
var ConstSet46 = setConstr(0);
var ConstSet47 = setConstr(1);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(2);
var ConstSet50 = setConstr(2);
var ConstSet51 = setConstr(2);
var ConstSet52 = setConstr(2);
var ConstSet53 = setConstr(2);
var ConstSet54 = setConstr(2);
var ConstSet55 = setConstr(2);
var ConstSet56 = setConstr(2);
var ConstSet57 = setConstr(2);
var ConstSet58 = setConstr(2);
var ConstSet59 = setConstr(2);
var ConstSet60 = setConstr(3);
var ConstSet61 = setConstr(0);
var ConstSet62 = setConstr(1);
            var pieceColors_1056964628 = ["rgba(0,0,0,0.0)", "rgba(0,127,255,1.0)", "rgba(0,0,255,1.0)", "rgba(255,127,0,1.0)", "rgba(255,255,0,1.0)", "rgba(0,255,127,1.0)", "rgba(255,0,0,1.0)", "rgba(255,0,255,1.0)"];
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(3);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var state_1073741837 = [{a0: 1773455756, a1: 4275166512}];
if (globalThis.utcInstance_1090520426 === undefined) {
  globalThis.utcInstance_1090520426 = [null];
}
if (globalThis.localInstance_1090520427 === undefined) {
  globalThis.localInstance_1090520427 = [null];
}
var objectID_1308623010 = [0];
window.requestAnimationFrame =
  window.requestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.mozRequestAnimationFrame ||
    ((cb) => window.setTimeout(callback, 1000 / 60));


function newGlobal_637534228() {
  var result_637534229 = null;

    result_637534229 = {musicVolume: 128, currentMusic: null, numTicks: 0, fps: 0, canvas: null, context: null};

  return result_637534229;

}

function finish_469762120(state_469762122, global_469762123) {
  
}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet2[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = (old_251658421 + n_251658420));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469762487 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762487 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469762487;
            result_251658417[result_251658417_Idx][(old_251658421 + iHEX60gensym4_251658435)] = x_251658418.charCodeAt((start_251658419 + iHEX60gensym4_251658435));
            i_469762487 += 1;
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_318767107(x_318767108) {
  var result_318767109 = [[]];

    addInt_251658457(result_318767109, 0, x_318767108);

  return result_318767109[0];

}

function reprEnum(e_33557385, typ_33557386) {
  var result_33557387 = [];

    var tmp_33557388 = false;
    var item_33557389 = typ_33557386.node.sons[e_33557385];
    tmp_33557388 = item_33557389 !== undefined
    if (tmp_33557388) {
    result_33557387 = nimCopy(null, makeNimstrLit(item_33557389.name), NTI33554439);
    }
    else {
      result_33557387 = nimCopy(null, (HEX24_318767107(e_33557385) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557387;

}

function finish_1056965452(state_1056965453, global_1056965454) {
    global_1056965454.currentMusic.pause();
    global_1056965454.currentMusic = null;

  
}

function finish_469762125(state_469762127, global_469762128) {
  
}

function finish_469762116(game_469762117, state_469762118, global_469762119) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

    switch (state_469762118.kind) {
    case 0:
      var Temporary1 = state_469762118;
      if (ConstSet1[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      finish_469762120(Temporary1.none, global_469762119);
      break;
    case 1:
      break;
    case 2:
      var Temporary2 = state_469762118;
      if (ConstSet3[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI469762053)); }
      finish_1056965452(Temporary2.tetris, global_469762119);
      break;
    case 3:
      var Temporary3 = state_469762118;
      if (ConstSet4[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI469762053)); }
      finish_469762125(Temporary3.done, global_469762119);
      break;
    }

  
}

function finish_469762302(game_469762303) {
    finish_469762116(game_469762303, game_469762303.state, game_469762303.global);

  
}

function init_469762081(state_469762083, global_469762084) {
  
}

function loadTexture_671088669(url_671088670) {
  var result_671088671 = null;

      result_671088671 = new Image();
  result_671088671.src = url_671088670;
  

  return result_671088671;

}

function len_1056965101(x_1056965104) {
  var result_1056965105 = 0;

    result_1056965105 = nimMax(0, ((x_1056965104.b - x_1056965104.a) + 1));

  return result_1056965105;

}

function HEX2EHEX2E_1056965078(a_1056965081, b_1056965082) {
  var result_1056965085 = ({a: 0, b: 0});

    result_1056965085 = nimCopy(result_1056965085, {a: a_1056965081, b: b_1056965082}, NTI1056965083);

  return result_1056965085;

}

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557575(x_33557576, y_33557577) {
  var result_33557578 = 0.0;

    result_33557578 = (toFloat_33556001(x_33557576) / toFloat_33556001(y_33557577));

  return result_33557578;

}

function epochTime_1090522394() {
  var result_1090522395 = 0.0;

    result_1090522395 = HEX2F_33557575(new Date().getTime(), 1000);

  return result_1090522395;

}

function rotl_1073741855(x_1073741856, k_1073741857) {
  var result_1073741858 = 0;

    result_1073741858 = ((x_1073741856 << k_1073741857) | (x_1073741856 >>> ((64 - k_1073741857) >>> 0)));

  return result_1073741858;

}

function next_1073741867(r_1073741868) {
  var result_1073741869 = 0;

    var s0_1073741870 = r_1073741868.a0;
    var s1_1073741871 = r_1073741868.a1;
    result_1073741869 = ((s0_1073741870 + s1_1073741871) >>> 0);
    s1_1073741871 = (s1_1073741871 ^ s0_1073741870);
    r_1073741868.a0 = ((rotl_1073741855(s0_1073741870, 55) ^ s1_1073741871) ^ (s1_1073741871 << 14));
    r_1073741868.a1 = rotl_1073741855(s1_1073741871, 36);

  return result_1073741869;

}

function skipRandomNumbers_1073741876(s_1073741877) {
    var s0_1073741879 = 0;
    var s1_1073741880 = 0;
    Label1: do {
      var i_1073741889 = 0;
      var res_469762497 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762497 <= 1)) break Label3;
            i_1073741889 = res_469762497;
            Label4: do {
              var b_1073741894 = 0;
              var i_469762495 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_469762495 < 64)) break Label6;
                    b_1073741894 = i_469762495;
                    if (!(((helper_1073741878[i_1073741889] & (1 << b_1073741894)) == 0))) {
                    s0_1073741879 = (s0_1073741879 ^ s_1073741877.a0);
                    s1_1073741880 = (s1_1073741880 ^ s_1073741877.a1);
                    }
                    
                    var _ = next_1073741867(s_1073741877);
                    i_469762495 += 1;
                  }
              } while (false);
            } while (false);
            res_469762497 += 1;
          }
      } while (false);
    } while (false);
    s_1073741877.a0 = s0_1073741879;
    s_1073741877.a1 = s1_1073741880;

  
}

function initRand_1073742043(seed_1073742044) {
    var Temporary1;

  var result_1073742045 = [({a0: 0, a1: 0})];

    if (!((seed_1073742044 == 0))) {
    Temporary1 = seed_1073742044;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_1073742051 = Temporary1;
    result_1073742045[0].a0 = Math.floor(seed_1073742051 / Math.pow(2, 16));
    result_1073742045[0].a1 = (seed_1073742051 & 65535);
    skipRandomNumbers_1073741876(result_1073742045[0]);
    var _ = next_1073741867(result_1073742045[0]);

  return result_1073742045[0];

}

function initRand_1073742068() {
  var result_1073742069 = ({a0: 0, a1: 0});

    var time_1073742070 = ((epochTime_1090522394() * 1000.0) & 2147483647);
    result_1073742069 = nimCopy(result_1073742069, initRand_1073742043(time_1073742070), NTI1073741828);

  return result_1073742069;

}

function randomize_1073742075() {
    state_1073741837[0] = nimCopy(state_1073741837[0], initRand_1073742068(), NTI1073741828);

  
}

function coord_1056964705(x_1056964706, y_1056964707) {
  var result_1056964708 = 0;

    result_1056964708 = ((y_1056964707 * 10) + x_1056964706);

  return result_1056964708;

}

function initPiece_1056964968(kind_1056964969) {
  var result_1056964970 = ({kind: 0, pos: 0, rot: 0});

    result_1056964970.kind = kind_1056964969;
    result_1056964970.pos = coord_1056964705(-(minDims_1056965056[kind_1056964969]["Field0"]), -(minDims_1056965056[kind_1056964969]["Field1"]));

  return result_1056964970;

}

function rand_1073741928(r_1073741930, max_1073741931) {
  var result_1073741932 = 0;

  BeforeRet: do {
    if ((max_1073741931 == 0)) {
    break BeforeRet;
    }
    else {
      var max_1073741933 = max_1073741931;
      if ((max_1073741933 == -1)) {
      result_1073741932 = next_1073741867(r_1073741930);
      break BeforeRet;
      }
      
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_1073741946 = next_1073741867(r_1073741930);
            if ((x_1073741946 <= ((4294967295 - (4294967295 % max_1073741933)) ))) {
            result_1073741932 = (x_1073741946 % ((max_1073741933 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_1073741932;

}

function rand_1073741924(r_1073741925, max_1073741926) {
  var result_1073741927 = 0;

    result_1073741927 = rand_1073741928(r_1073741925, max_1073741926);

  return result_1073741927;

}

function shuffle_1056965130(r_1056965132, x_1056965133) {
    Label1: do {
      var i_1056965142 = 0;
      var colontmp__469762500 = 0;
      colontmp__469762500 = (x_1056965133).length - 1;
      var res_469762501 = colontmp__469762500;
      Label2: do {
          Label3: while (true) {
          if (!(1 <= res_469762501)) break Label3;
            i_1056965142 = res_469762501;
            var j_1056965143 = rand_1073741924(r_1056965132, i_1056965142);
            var Temporary4 = x_1056965133[i_1056965142]; x_1056965133[i_1056965142] = x_1056965133[j_1056965143]; x_1056965133[j_1056965143] = Temporary4;            res_469762501 -= 1;
          }
      } while (false);
    } while (false);

  
}

function shuffle_1056965127(x_1056965129) {
    shuffle_1056965130(state_1073741837[0], x_1056965129);

  
}

function randPieceKind_1056965116(state_1056965117) {
  var result_1056965118 = 0;

    if ((state_1056965117.randBufferPos == 7)) {
    state_1056965117.randBufferPos = 0;
    state_1056965117.randBuffer = nimCopy(state_1056965117.randBuffer, [1, 2, 3, 4, 5, 6, 7], NTI1056965104);
    shuffle_1056965127(state_1056965117.randBuffer);
    }
    
    result_1056965118 = state_1056965117.randBuffer[state_1056965117.randBufferPos];
    state_1056965117.randBufferPos += 1;

  return result_1056965118;

}

function rand_1056965350(r_1056965352, max_1056965353) {
  var result_1056965354 = 0;

  BeforeRet: do {
    if ((max_1056965353 == 0)) {
    break BeforeRet;
    }
    else {
      var max_1056965355 = max_1056965353;
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_1056965364 = next_1073741867(r_1056965352);
            if ((x_1056965364 <= ((4294967295 - (4294967295 % max_1056965355)) ))) {
            result_1056965354 = (x_1056965364 % ((max_1056965355 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_1056965354;

}

function rand_1056965337(r_1056965339, x_1056965340) {
  var result_1056965341 = 0;

    result_1056965341 = ((rand_1056965350(r_1056965339, ((x_1056965340.b - x_1056965340.a) >>> 0)) + x_1056965340.a) >>> 0);

  return result_1056965341;

}

function rand_1056965329(x_1056965331) {
  var result_1056965332 = 0;

    result_1056965332 = rand_1056965337(state_1073741837[0], x_1056965331);

  return result_1056965332;

}

function rot_1056964791(x_1056964792, y_1056964793, q_1056964794) {
    var Temporary1;

  var result_1056964795 = {Field0: 0, Field1: 0};

    switch (q_1056964794) {
    case 0:
      Temporary1 = {Field0: x_1056964792, Field1: y_1056964793};
      break;
    case 1:
      Temporary1 = {Field0: y_1056964793, Field1: -(x_1056964792)};
      break;
    case 2:
      Temporary1 = {Field0: -(x_1056964792), Field1: -(y_1056964793)};
      break;
    case 3:
      Temporary1 = {Field0: -(y_1056964793), Field1: x_1056964792};
      break;
    }
    result_1056964795 = nimCopy(result_1056964795, Temporary1, NTI1056964907);

  return result_1056964795;

}

function column_1056964745(c_1056964746) {
  var result_1056964747 = 0;

    result_1056964747 = Math.trunc(c_1056964746 % 10);

  return result_1056964747;

}

function row_1056964748(c_1056964749) {
  var result_1056964750 = 0;

    result_1056964750 = Math.trunc(c_1056964749 / 10);

  return result_1056964750;

}

function plusRot_1056964796(a_1056964797, x_1056964798, y_1056964799, q_1056964800) {
  var result_1056964801 = {Field0: 0, Field1: 0};

    var colontmp__469762524 = rot_1056964791(x_1056964798, y_1056964799, q_1056964800);
    var rotx_1056964802 = colontmp__469762524["Field0"];
    var roty_1056964803 = colontmp__469762524["Field1"];
    var colontmp__469762522 = (column_1056964745(a_1056964797) + rotx_1056964802);
    var colontmp__469762523 = (row_1056964748(a_1056964797) + roty_1056964803);
    result_1056964801 = nimCopy(result_1056964801, {Field0: colontmp__469762522, Field1: colontmp__469762523}, NTI1056964913);

  return result_1056964801;

}

function overlaps_1056964941(board_1056964942, piece_1056964943) {
  var result_1056964944 = false;

  BeforeRet: do {
    result_1056964944 = false;
    Label1: do {
      var c_1056964945 = 0;
      if (!((piece_1056964943.kind == 0))) {
      c_1056964945 = piece_1056964943.pos;
      if (!((board_1056964942[c_1056964945] == 0))) {
      result_1056964944 = true;
      break BeforeRet;
      }
      
      }
      
      Label2: do {
        var x_469762513 = 0;
        var y_469762514 = 0;
        var colontmp__469762515 = [];
        colontmp__469762515 = pieceExtensions_1056964663[piece_1056964943.kind];
        var i_469762516 = 0;
        var L_469762517 = (colontmp__469762515).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_469762516 < L_469762517)) break Label4;
              x_469762513 = colontmp__469762515[i_469762516]["Field0"];
              y_469762514 = colontmp__469762515[i_469762516]["Field1"];
              var colontmp__469762521 = plusRot_1056964796(piece_1056964943.pos, x_469762513, y_469762514, piece_1056964943.rot);
              var c_469762519 = colontmp__469762521["Field0"];
              var r_469762520 = colontmp__469762521["Field1"];
              c_1056964945 = coord_1056964705(c_469762519, r_469762520);
              if (!((board_1056964942[c_1056964945] == 0))) {
              result_1056964944 = true;
              break BeforeRet;
              }
              
              i_469762516 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
  } while (false);

  return result_1056964944;

}

function spawnPiece_1056965313(state_1056965314, initial_1056965315) {
    var Temporary1;

    state_1056965314.piece = nimCopy(state_1056965314.piece, initial_1056965315, NTI1056964784);
    if ((state_1056965314.piece.kind == 0)) {
    state_1056965314.piece.kind = rand_1056965329(HEX2EHEX2E_1056965078(1, 7));
    }
    
    if ((ConstSet8[state_1056965314.piece.kind] != undefined)) {
    Temporary1 = 11;
    }
    else {
    Temporary1 = 10;
    }
    
    state_1056965314.piece.pos = coord_1056964705(5, Temporary1);
    Label2: do {
        Label3: while (true) {
        if (!overlaps_1056964941(state_1056965314.board, state_1056965314.piece)) break Label3;
          state_1056965314.piece.pos = (state_1056965314.piece.pos - 10);
        }
    } while (false);
    state_1056965314.pieceDropTick = 0;

  
}

function sysFatal_1056965283(message_1056965286) {
    raiseException({message: nimCopy(null, message_1056965286, NTI33554439), m_type: NTI33555130, parent: null, name: null, trace: [], up: null}, "RangeDefect");

  
}

function HEX5BHEX5DHEX3D_1056965255(a_1056965260, x_1056965261, b_1056965262) {
    var xa_1056965264 = x_1056965261.a;
    var L_1056965273 = (((4 - x_1056965261.b) - xa_1056965264) + 1);
    if ((L_1056965273 == (b_1056965262).length)) {
    Label1: do {
      var i_1056965282 = 0;
      var i_469762526 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762526 < L_1056965273)) break Label3;
            i_1056965282 = i_469762526;
            a_1056965260[(i_1056965282 + xa_1056965264)] = nimCopy(a_1056965260[(i_1056965282 + xa_1056965264)], b_1056965262[i_1056965282], NTI1056964784);
            i_469762526 += 1;
          }
      } while (false);
    } while (false);
    }
    else {
    sysFatal_1056965283(makeNimstrLit("different lengths for slice assignment"));
    }
    

  
}

function HEX2EHEX2E_905969744(a_905969747, b_905969748) {
  var result_905969751 = ({a: 0, b: 0});

    result_905969751 = nimCopy(result_905969751, {a: a_905969747, b: b_905969748}, NTI905969743);

  return result_905969751;

}

function newSeq_1056965224(len_1056965226) {
  var result_1056965227 = [];

    result_1056965227 = new Array(len_1056965226); for (var i = 0 ; i < len_1056965226 ; ++i) { result_1056965227[i] = ({kind: 0, pos: 0, rot: 0}); }
  return result_1056965227;

}

function HEX5BHEX5D_1056965204(a_1056965209, x_1056965210) {
  var result_1056965211 = [];

    var xa_1056965213 = x_1056965210.a;
    var L_1056965223 = (((4 - x_1056965210.b) - xa_1056965213) + 1);
    result_1056965211 = nimCopy(null, newSeq_1056965224(L_1056965223), NTI1056965177);
    Label1: do {
      var i_1056965245 = 0;
      var i_469762529 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762529 < L_1056965223)) break Label3;
            i_1056965245 = i_469762529;
            result_1056965211[i_1056965245] = nimCopy(result_1056965211[i_1056965245], a_1056965209[(i_1056965245 + xa_1056965213)], NTI1056964784);
            i_469762529 += 1;
          }
      } while (false);
    } while (false);

  return result_1056965211;

}

function HEX5BHEX5DHEX3D_1056965287(a_1056965290, i_1056965291, x_1056965292) {
    a_1056965290[((4 - i_1056965291) + 0)] = nimCopy(a_1056965290[((4 - i_1056965291) + 0)], x_1056965292, NTI1056964784);

  
}

function nextPiece_1056965179(state_1056965180) {
  var result_1056965181 = ({kind: 0, pos: 0, rot: 0});

    result_1056965181 = nimCopy(result_1056965181, state_1056965180.nextPieces[0], NTI1056964784);
    HEX5BHEX5DHEX3D_1056965255(state_1056965180.nextPieces, HEX2EHEX2E_905969744(0, 2), HEX5BHEX5D_1056965204(state_1056965180.nextPieces, HEX2EHEX2E_905969744(1, 1)));
    HEX5BHEX5DHEX3D_1056965287(state_1056965180.nextPieces, 1, initPiece_1056964968(randPieceKind_1056965116(state_1056965180)));

  return result_1056965181;

}

function setMusic_671088680(music_671088681, music_671088681_Idx, file_671088682) {
    if (!((music_671088681[music_671088681_Idx] == null))) {
    music_671088681[music_671088681_Idx].pause();
    music_671088681[music_671088681_Idx] = null;
    }
    
    music_671088681[music_671088681_Idx] = new Audio(file_671088682);

  
}

function init_1056965371(state_1056965372, state_1056965372_Idx, global_1056965373) {
    state_1056965372[state_1056965372_Idx] = {board: arrayConstr(300, 0, NTI1056964611), nextPieces: [({kind: 0, pos: 0, rot: 0}), ({kind: 0, pos: 0, rot: 0}), ({kind: 0, pos: 0, rot: 0}), ({kind: 0, pos: 0, rot: 0})], piece: ({kind: 0, pos: 0, rot: 0}), pieceDropTicking: false, pieceDropTick: 0, pieceDropTime: 0, pieceDropTickMultiplier: 0, pieceDropRetry: 0, pieceDropRetries: 0, holdPiece: ({kind: 0, pos: 0, rot: 0}), justHeld: false, randBuffer: [0, 0, 0, 0, 0, 0, 0], randBufferPos: 0};
    Label1: do {
      state_1056965372[state_1056965372_Idx].pieceDropTicking = true;
      state_1056965372[state_1056965372_Idx].pieceDropTick = 0;
      state_1056965372[state_1056965372_Idx].pieceDropTime = 120;
      state_1056965372[state_1056965372_Idx].pieceDropTickMultiplier = 1;
      state_1056965372[state_1056965372_Idx].pieceDropRetry = 0;
      state_1056965372[state_1056965372_Idx].pieceDropRetries = 1;
    } while (false);
    state_1056965372[state_1056965372_Idx].randBufferPos = len_1056965101(HEX2EHEX2E_1056965078(1, 7));
    randomize_1073742075();
    Label2: do {
      var np_1056965412 = null;
      var i_469762491 = 0;
      Label3: do {
          Label4: while (true) {
          if (!true) break Label4;
            np_1056965412 = state_1056965372[state_1056965372_Idx].nextPieces[i_469762491];
            np_1056965412 = nimCopy(np_1056965412, initPiece_1056964968(randPieceKind_1056965116(state_1056965372[state_1056965372_Idx])), NTI1056964784);
            if ((3 <= i_469762491)) {
            break Label3;
            }
            
            i_469762491 += 1;
          }
      } while (false);
    } while (false);
    var HEX3Atmp_1056965413 = state_1056965372[state_1056965372_Idx];
    spawnPiece_1056965313(HEX3Atmp_1056965413, nextPiece_1056965179(HEX3Atmp_1056965413));
    if (true) {
    setMusic_671088680(global_1056965373, "currentMusic", "assets/music.ogg");
    }
    
    var mHEX60gensym25_1056965415 = global_1056965373.currentMusic;
    mHEX60gensym25_1056965415.loop = true;
    mHEX60gensym25_1056965415.play();

  
}

function init_469762085(state_469762087, global_469762088) {
  
}

function init_469762077(game_469762078, state_469762079, global_469762080) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

    switch (state_469762079.kind) {
    case 0:
      var Temporary1 = state_469762079;
      if (ConstSet5[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      init_469762081(Temporary1.none, global_469762080);
      break;
    case 1:
      var Temporary2 = state_469762079;
      if (ConstSet6[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'initial\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI469762053)); }
      Temporary2.initial = {background: null};
      var Temporary3 = state_469762079;
      if (ConstSet7[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'initial\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI469762053)); }
      Temporary3.initial.background = loadTexture_671088669("assets/mainmenu.png");
      break;
    case 2:
      var Temporary4 = state_469762079;
      if (ConstSet9[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI469762053)); }
      init_1056965371(Temporary4, "tetris", global_469762080);
      break;
    case 3:
      var Temporary5 = state_469762079;
      if (ConstSet10[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI469762053)); }
      init_469762085(Temporary5.done, global_469762080);
      break;
    }

  
}

function init_469762300(game_469762301) {
    init_469762077(game_469762301, game_469762301.state, game_469762301.global);

  
}

function switch_469762074(game_469762075, k_469762076) {
    finish_469762302(game_469762075);
    game_469762075.state = nimCopy(game_469762075.state, {kind: k_469762076, none: ({}), initial: null, tetris: null, done: ({})}, NTI469762054);
    init_469762300(game_469762075);

  
}

function init_469762343(game_469762344, game_469762344_Idx) {
    game_469762344[game_469762344_Idx] = {global: null, state: ({kind: 0, none: ({}), initial: null, tetris: null, done: ({})})};
    game_469762344[game_469762344_Idx].global = newGlobal_637534228();
    game_469762344[game_469762344_Idx].global.canvas = document.getElementById("fup1");
    game_469762344[game_469762344_Idx].global.context = game_469762344[game_469762344_Idx].global.canvas.getContext('2d');
    switch_469762074(game_469762344[game_469762344_Idx], 1);

  
}

function key_469762232(state_469762234, global_469762235, event_469762236) {
  
}

function contains_1056964870(s_1056964874, value_1056964875) {
    var Temporary1;

  var result_1056964876 = false;

    if (!(s_1056964874.a <= value_1056964875)) Temporary1 = false; else {      Temporary1 = (value_1056964875 <= s_1056964874.b);    }    result_1056964876 = Temporary1;

  return result_1056964876;

}

function HEX2EHEX2E_1056964849(a_1056964852, b_1056964853) {
  var result_1056964856 = ({a: 0, b: 0});

    result_1056964856 = nimCopy(result_1056964856, {a: nimCopy(null, a_1056964852, NTI1056964781), b: nimCopy(null, b_1056964853, NTI1056964781)}, NTI1056964942);

  return result_1056964856;

}

function contains_1056964835(x_1056964839) {
  var result_1056964840 = false;

    result_1056964840 = contains_1056964870(HEX2EHEX2E_1056964849(0, 9), x_1056964839);

  return result_1056964840;

}

function contains_1056964912(s_1056964916, value_1056964917) {
    var Temporary1;

  var result_1056964918 = false;

    if (!(s_1056964916.a <= value_1056964917)) Temporary1 = false; else {      Temporary1 = (value_1056964917 <= s_1056964916.b);    }    result_1056964918 = Temporary1;

  return result_1056964918;

}

function HEX2EHEX2E_1056964891(a_1056964894, b_1056964895) {
  var result_1056964898 = ({a: 0, b: 0});

    result_1056964898 = nimCopy(result_1056964898, {a: nimCopy(null, a_1056964894, NTI1056964782), b: nimCopy(null, b_1056964895, NTI1056964782)}, NTI1056964966);

  return result_1056964898;

}

function contains_1056964877(x_1056964881) {
  var result_1056964882 = false;

    result_1056964882 = contains_1056964912(HEX2EHEX2E_1056964891(0, 29), x_1056964881);

  return result_1056964882;

}

function rotate_1056965455(state_1056965456, forward_1056965457) {
    var Temporary1;
    var Temporary2;
      var Temporary3;

  BeforeRet: do {
    var oldRot_1056965458 = state_1056965456.piece.rot;
    if (forward_1056965457) {
    if ((oldRot_1056965458 == 3)) {
    Temporary2 = 0;
    }
    else {
    Temporary2 = (oldRot_1056965458 + 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      if ((oldRot_1056965458 == 0)) {
      Temporary3 = 3;
      }
      else {
      Temporary3 = (oldRot_1056965458 - 1);
      }
      
    Temporary1 = Temporary3;
    }
    
    var newRot_1056965475 = Temporary1;
    var newPiece_1056965476 = nimCopy(null, state_1056965456.piece, NTI1056964784);
    newPiece_1056965476.rot = newRot_1056965475;
    var outOfBounds_1056965477 = [false];
    Label4: do {
      var __1056965478 = 0;
      if (!((newPiece_1056965476.kind == 0))) {
      __1056965478 = newPiece_1056965476.pos;
      }
      
      Label5: do {
        var x_469762550 = 0;
        var y_469762551 = 0;
        var colontmp__469762552 = [];
        colontmp__469762552 = pieceExtensions_1056964663[newPiece_1056965476.kind];
        var i_469762553 = 0;
        var L_469762554 = (colontmp__469762552).length;
        Label6: do {
            Label7: while (true) {
            if (!(i_469762553 < L_469762554)) break Label7;
              x_469762550 = colontmp__469762552[i_469762553]["Field0"];
              y_469762551 = colontmp__469762552[i_469762553]["Field1"];
              var colontmp__469762580 = plusRot_1056964796(newPiece_1056965476.pos, x_469762550, y_469762551, newPiece_1056965476.rot);
              var col_469762556 = colontmp__469762580["Field0"];
              var row_469762557 = colontmp__469762580["Field1"];
              if ((contains_1056964835(col_469762556) && contains_1056964877(row_469762557))) {
              __1056965478 = coord_1056964705(col_469762556, row_469762557);
              }
              else {
                outOfBounds_1056965477[0] = true;
                break Label5;
              }
              
              i_469762553 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    var i_1056965479 = 1;
    Label8: do {
        Label9: while (true) {
        if (!outOfBounds_1056965477[0]) break Label9;
          outOfBounds_1056965477[0] = false;
          var colontmp__469762581 = {Field0: column_1056964745(newPiece_1056965476.pos), Field1: row_1056964748(newPiece_1056965476.pos)};
          var col0_1056965480 = colontmp__469762581["Field0"];
          var row0_1056965481 = colontmp__469762581["Field1"];
          var oneInside_1056965482 = false;
          if (contains_1056964835((col0_1056965480 - i_1056965479))) {
          oneInside_1056965482 = true;
          newPiece_1056965476.pos = coord_1056964705((col0_1056965480 - i_1056965479), row0_1056965481);
          Label10: do {
            var __1056965488 = 0;
            if (!((newPiece_1056965476.kind == 0))) {
            __1056965488 = newPiece_1056965476.pos;
            }
            
            Label11: do {
              var x_469762561 = 0;
              var y_469762562 = 0;
              var colontmp__469762563 = [];
              colontmp__469762563 = pieceExtensions_1056964663[newPiece_1056965476.kind];
              var i_469762564 = 0;
              var L_469762565 = (colontmp__469762563).length;
              Label12: do {
                  Label13: while (true) {
                  if (!(i_469762564 < L_469762565)) break Label13;
                    x_469762561 = colontmp__469762563[i_469762564]["Field0"];
                    y_469762562 = colontmp__469762563[i_469762564]["Field1"];
                    var colontmp__469762582 = plusRot_1056964796(newPiece_1056965476.pos, x_469762561, y_469762562, newPiece_1056965476.rot);
                    var col_469762567 = colontmp__469762582["Field0"];
                    var row_469762568 = colontmp__469762582["Field1"];
                    if ((contains_1056964835(col_469762567) && contains_1056964877(row_469762568))) {
                    __1056965488 = coord_1056964705(col_469762567, row_469762568);
                    }
                    else {
                      outOfBounds_1056965477[0] = true;
                      break Label11;
                    }
                    
                    i_469762564 += 1;
                  }
              } while (false);
            } while (false);
          } while (false);
          }
          else {
            outOfBounds_1056965477[0] = true;
          }
          
          if (outOfBounds_1056965477[0]) {
          outOfBounds_1056965477[0] = false;
          if (contains_1056964835((col0_1056965480 + i_1056965479))) {
          oneInside_1056965482 = true;
          newPiece_1056965476.pos = coord_1056964705((col0_1056965480 + i_1056965479), row0_1056965481);
          Label14: do {
            var __1056965494 = 0;
            if (!((newPiece_1056965476.kind == 0))) {
            __1056965494 = newPiece_1056965476.pos;
            }
            
            Label15: do {
              var x_469762571 = 0;
              var y_469762572 = 0;
              var colontmp__469762573 = [];
              colontmp__469762573 = pieceExtensions_1056964663[newPiece_1056965476.kind];
              var i_469762574 = 0;
              var L_469762575 = (colontmp__469762573).length;
              Label16: do {
                  Label17: while (true) {
                  if (!(i_469762574 < L_469762575)) break Label17;
                    x_469762571 = colontmp__469762573[i_469762574]["Field0"];
                    y_469762572 = colontmp__469762573[i_469762574]["Field1"];
                    var colontmp__469762583 = plusRot_1056964796(newPiece_1056965476.pos, x_469762571, y_469762572, newPiece_1056965476.rot);
                    var col_469762577 = colontmp__469762583["Field0"];
                    var row_469762578 = colontmp__469762583["Field1"];
                    if ((contains_1056964835(col_469762577) && contains_1056964877(row_469762578))) {
                    __1056965494 = coord_1056964705(col_469762577, row_469762578);
                    }
                    else {
                      outOfBounds_1056965477[0] = true;
                      break Label15;
                    }
                    
                    i_469762574 += 1;
                  }
              } while (false);
            } while (false);
          } while (false);
          }
          else {
            outOfBounds_1056965477[0] = true;
          }
          
          }
          
          if (oneInside_1056965482) {
          i_1056965479 += 1;
          }
          else {
            break Label8;
          }
          
        }
    } while (false);
    if (outOfBounds_1056965477[0]) {
    break BeforeRet;
    }
    
    Label18: do {
        Label19: while (true) {
        if (!overlaps_1056964941(state_1056965456.board, newPiece_1056965476)) break Label19;
          newPiece_1056965476.pos = (newPiece_1056965476.pos - 10);
        }
    } while (false);
    state_1056965456.piece = nimCopy(state_1056965456.piece, newPiece_1056965476, NTI1056964784);
  } while (false);

  
}

function drop_1056965499(state_1056965500, spawned_1056965501, spawned_1056965501_Idx) {
    var newPiece_1056965502 = nimCopy(null, state_1056965500.piece, NTI1056964784);
    var maxRow_1056965503 = 0;
    Label1: do {
      var c_1056965504 = 0;
      if (!((state_1056965500.piece.kind == 0))) {
      c_1056965504 = state_1056965500.piece.pos;
      if ((maxRow_1056965503 < row_1056964748(c_1056965504))) {
      maxRow_1056965503 = row_1056964748(c_1056965504);
      }
      
      }
      
      Label2: do {
        var x_469762587 = 0;
        var y_469762588 = 0;
        var colontmp__469762589 = [];
        colontmp__469762589 = pieceExtensions_1056964663[state_1056965500.piece.kind];
        var i_469762590 = 0;
        var L_469762591 = (colontmp__469762589).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_469762590 < L_469762591)) break Label4;
              x_469762587 = colontmp__469762589[i_469762590]["Field0"];
              y_469762588 = colontmp__469762589[i_469762590]["Field1"];
              var colontmp__469762605 = plusRot_1056964796(state_1056965500.piece.pos, x_469762587, y_469762588, state_1056965500.piece.rot);
              var c_469762593 = colontmp__469762605["Field0"];
              var r_469762594 = colontmp__469762605["Field1"];
              c_1056965504 = coord_1056964705(c_469762593, r_469762594);
              if ((maxRow_1056965503 < row_1056964748(c_1056965504))) {
              maxRow_1056965503 = row_1056964748(c_1056965504);
              }
              
              i_469762590 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    if ((maxRow_1056965503 == 29)) {
    spawned_1056965501[spawned_1056965501_Idx] = true;
    }
    else {
      newPiece_1056965502.pos = (newPiece_1056965502.pos + 10);
      spawned_1056965501[spawned_1056965501_Idx] = overlaps_1056964941(state_1056965500.board, newPiece_1056965502);
    }
    
    if (spawned_1056965501[spawned_1056965501_Idx]) {
    if ((state_1056965500.pieceDropRetry < state_1056965500.pieceDropRetries)) {
    state_1056965500.pieceDropRetry += 1;
    }
    else {
      state_1056965500.pieceDropRetry = 0;
      state_1056965500.justHeld = false;
      Label5: do {
        var c_1056965513 = 0;
        if (!((state_1056965500.piece.kind == 0))) {
        c_1056965513 = state_1056965500.piece.pos;
        state_1056965500.board[c_1056965513] = state_1056965500.piece.kind;
        }
        
        Label6: do {
          var x_469762597 = 0;
          var y_469762598 = 0;
          var colontmp__469762599 = [];
          colontmp__469762599 = pieceExtensions_1056964663[state_1056965500.piece.kind];
          var i_469762600 = 0;
          var L_469762601 = (colontmp__469762599).length;
          Label7: do {
              Label8: while (true) {
              if (!(i_469762600 < L_469762601)) break Label8;
                x_469762597 = colontmp__469762599[i_469762600]["Field0"];
                y_469762598 = colontmp__469762599[i_469762600]["Field1"];
                var colontmp__469762606 = plusRot_1056964796(state_1056965500.piece.pos, x_469762597, y_469762598, state_1056965500.piece.rot);
                var c_469762603 = colontmp__469762606["Field0"];
                var r_469762604 = colontmp__469762606["Field1"];
                c_1056965513 = coord_1056964705(c_469762603, r_469762604);
                state_1056965500.board[c_1056965513] = state_1056965500.piece.kind;
                i_469762600 += 1;
              }
          } while (false);
        } while (false);
      } while (false);
      spawnPiece_1056965313(state_1056965500, nextPiece_1056965179(state_1056965500));
    }
    
    }
    else {
      state_1056965500.piece = nimCopy(state_1056965500.piece, newPiece_1056965502, NTI1056964784);
    }
    

  
}

function setVolume_671088704(music_671088705, vol_671088706) {
    var vol2_671088707 = HEX2F_33557575(vol_671088706, 128);
    music_671088705.volume = vol2_671088707

  
}

function key_469762255(state_469762257, global_469762258, event_469762259) {
  
}

function key_469762227(game_469762228, state_469762229, global_469762230, event_469762231) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
          var Temporary7;
        var Temporary8;
        var Temporary9;
          var Temporary10;
        var Temporary11;
          var Temporary12;
        var Temporary13;
        var Temporary14;
        var Temporary15;
        var Temporary16;
          var Temporary18;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
        var Temporary28;
        var Temporary29;
              var Temporary32;
        var Temporary33;
        var Temporary34;
        var Temporary35;
        var Temporary36;
      var Temporary37;

    switch (state_469762229.kind) {
    case 0:
      var Temporary1 = state_469762229;
      if (ConstSet11[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      key_469762232(Temporary1.none, global_469762230, event_469762231);
      break;
    case 1:
        if (event_469762231.ctrlKey) Temporary4 = true; else {          Temporary4 = event_469762231.metaKey;        }        if (Temporary4) Temporary3 = true; else {          Temporary3 = event_469762231.shiftKey;        }        if (Temporary3) Temporary2 = true; else {          Temporary2 = event_469762231.altKey;        }      if (!(Temporary2)) {
      switch (toJSStr(cstrToNimstr(event_469762231.key))) {
      case "Escape":
        break;
      default: 
        switch_469762074(game_469762228, 2);
        break;
      }
      }
      
      break;
    case 2:
      switch (toJSStr(cstrToNimstr(event_469762231.key))) {
      case "x":
        var Temporary5 = state_469762229;
        if (ConstSet12[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI469762053)); }
        rotate_1056965455(Temporary5.tetris, true);
        break;
      case "z":
        var Temporary6 = state_469762229;
        if (ConstSet13[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI469762053)); }
        rotate_1056965455(Temporary6.tetris, false);
        break;
      case "c":
          var Temporary7 = state_469762229;
          if (ConstSet14[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI469762053)); }
        if (!(Temporary7.tetris.justHeld)) {
        var Temporary8 = state_469762229;
        if (ConstSet15[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI469762053)); }
        Temporary8.tetris.justHeld = true;
          var Temporary10 = state_469762229;
          if (ConstSet16[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI469762053)); }
        if (!((Temporary10.tetris.holdPiece.kind == 0))) {
        var Temporary11 = state_469762229;
        if (ConstSet17[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI469762053)); }
        Temporary9 = Temporary11.tetris.holdPiece;
        }
        else {
          var Temporary12 = state_469762229;
          if (ConstSet18[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI469762053)); }
        Temporary9 = nextPiece_1056965179(Temporary12.tetris);
        }
        
        var oldHoldPieceHEX60gensym11_469762246 = nimCopy(null, Temporary9, NTI1056964784);
        var Temporary13 = state_469762229;
        if (ConstSet19[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI469762053)); }
        var Temporary14 = state_469762229;
        if (ConstSet20[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI469762053)); }
        Temporary13.tetris.holdPiece = nimCopy(Temporary13.tetris.holdPiece, Temporary14.tetris.piece, NTI1056964784);
        var Temporary15 = state_469762229;
        if (ConstSet21[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI469762053)); }
        var minXHEX60gensym11_469762247 = column_1056964745(Temporary15.tetris.holdPiece.pos);
        var Temporary16 = state_469762229;
        if (ConstSet22[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI469762053)); }
        var minYHEX60gensym11_469762248 = row_1056964748(Temporary16.tetris.holdPiece.pos);
        Label17: do {
          var cHEX60gensym11_469762249 = 0;
          var colontmp__469762532 = ({kind: 0, pos: 0, rot: 0});
          var Temporary18 = state_469762229;
          if (ConstSet23[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI469762053)); }
          colontmp__469762532 = nimCopy(colontmp__469762532, Temporary18.tetris.holdPiece, NTI1056964784);
          if (!((colontmp__469762532.kind == 0))) {
          cHEX60gensym11_469762249 = colontmp__469762532.pos;
          if ((column_1056964745(cHEX60gensym11_469762249) < minXHEX60gensym11_469762247)) {
          minXHEX60gensym11_469762247 = column_1056964745(cHEX60gensym11_469762249);
          }
          
          if ((row_1056964748(cHEX60gensym11_469762249) < minYHEX60gensym11_469762248)) {
          minYHEX60gensym11_469762248 = row_1056964748(cHEX60gensym11_469762249);
          }
          
          }
          
          Label19: do {
            var x_469762534 = 0;
            var y_469762535 = 0;
            var colontmp__469762536 = [];
            colontmp__469762536 = pieceExtensions_1056964663[colontmp__469762532.kind];
            var i_469762537 = 0;
            var L_469762538 = (colontmp__469762536).length;
            Label20: do {
                Label21: while (true) {
                if (!(i_469762537 < L_469762538)) break Label21;
                  x_469762534 = colontmp__469762536[i_469762537]["Field0"];
                  y_469762535 = colontmp__469762536[i_469762537]["Field1"];
                  var colontmp__469762584 = plusRot_1056964796(colontmp__469762532.pos, x_469762534, y_469762535, colontmp__469762532.rot);
                  var c_469762540 = colontmp__469762584["Field0"];
                  var r_469762541 = colontmp__469762584["Field1"];
                  cHEX60gensym11_469762249 = coord_1056964705(c_469762540, r_469762541);
                  if ((column_1056964745(cHEX60gensym11_469762249) < minXHEX60gensym11_469762247)) {
                  minXHEX60gensym11_469762247 = column_1056964745(cHEX60gensym11_469762249);
                  }
                  
                  if ((row_1056964748(cHEX60gensym11_469762249) < minYHEX60gensym11_469762248)) {
                  minYHEX60gensym11_469762248 = row_1056964748(cHEX60gensym11_469762249);
                  }
                  
                  i_469762537 += 1;
                }
            } while (false);
          } while (false);
        } while (false);
        var Temporary22 = state_469762229;
        if (ConstSet24[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI469762053)); }
        var Temporary23 = state_469762229;
        if (ConstSet25[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI469762053)); }
        var Temporary24 = state_469762229;
        if (ConstSet26[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI469762053)); }
        Temporary22.tetris.holdPiece.pos = coord_1056964705((column_1056964745(Temporary23.tetris.holdPiece.pos) - minXHEX60gensym11_469762247), (row_1056964748(Temporary24.tetris.holdPiece.pos) - minYHEX60gensym11_469762248));
        var Temporary25 = state_469762229;
        if (ConstSet27[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI469762053)); }
        spawnPiece_1056965313(Temporary25.tetris, oldHoldPieceHEX60gensym11_469762246);
        }
        
        break;
      case "ArrowDown":
      case "Down":
        var Temporary26 = state_469762229;
        if (ConstSet28[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI469762053)); }
        Temporary26.tetris.pieceDropTime = 10;
        var Temporary27 = state_469762229;
        if (ConstSet29[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI469762053)); }
        Temporary27.tetris.pieceDropRetries = 3;
        break;
      case "ArrowUp":
      case "Up":
        var Temporary28 = state_469762229;
        if (ConstSet30[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI469762053)); }
        var Temporary29 = state_469762229;
        if (ConstSet31[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI469762053)); }
        Temporary28.tetris.pieceDropRetry = Temporary29.tetris.pieceDropRetries;
        var spawnedHEX60gensym11_469762250 = [false];
        Label30: do {
            Label31: while (true) {
            if (!!(spawnedHEX60gensym11_469762250[0])) break Label31;
              var Temporary32 = state_469762229;
              if (ConstSet32[Temporary32.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary32.kind, NTI469762053)); }
              drop_1056965499(Temporary32.tetris, spawnedHEX60gensym11_469762250, 0);
            }
        } while (false);
        var Temporary33 = state_469762229;
        if (ConstSet33[Temporary33.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary33.kind, NTI469762053)); }
        Temporary33.tetris.pieceDropTick = 0;
        break;
      case "d":
        var Temporary34 = state_469762229;
        if (ConstSet34[Temporary34.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary34.kind, NTI469762053)); }
        Temporary34.tetris.pieceDropTickMultiplier += 1;
        break;
      case "s":
        var Temporary35 = state_469762229;
        if (ConstSet35[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI469762053)); }
        var Temporary36 = state_469762229;
        if (ConstSet36[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI469762053)); }
        Temporary35.tetris.pieceDropTickMultiplier = nimMax(0, (Temporary36.tetris.pieceDropTickMultiplier - 1));
        break;
      case "i":
      case "ı":
        global_469762230.musicVolume = nimMax(0, (global_469762230.musicVolume - 16));
        setVolume_671088704(global_469762230.currentMusic, ((global_469762230.musicVolume) | 0));
        break;
      case "o":
        global_469762230.musicVolume = nimMin(128, (global_469762230.musicVolume + 16));
        setVolume_671088704(global_469762230.currentMusic, ((global_469762230.musicVolume) | 0));
        break;
      case "Escape":
        switch_469762074(game_469762228, 1);
        break;
      default: 
        break;
      }
      break;
    case 3:
      var Temporary37 = state_469762229;
      if (ConstSet37[Temporary37.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary37.kind, NTI469762053)); }
      key_469762255(Temporary37.done, global_469762230, event_469762231);
      break;
    }

  
}

function key_469762310(game_469762311, event_469762312) {
    key_469762227(game_469762311, game_469762311.state, game_469762311.global, event_469762312);

  
}

function keyRepeat_469762265(state_469762267, global_469762268, event_469762269) {
  
}

function keyRepeat_469762270(state_469762272, global_469762273, event_469762274) {
  
}

function keyRepeat_1056965821(state_1056965822, global_1056965823, event_1056965824) {
    switch (toJSStr(cstrToNimstr(event_1056965824.key))) {
    case "ArrowLeft":
    case "Left":
      var minCol_1056965842 = 9;
      Label1: do {
        var c_1056965843 = 0;
        if (!((state_1056965822.piece.kind == 0))) {
        c_1056965843 = state_1056965822.piece.pos;
        if ((column_1056964745(c_1056965843) < minCol_1056965842)) {
        minCol_1056965842 = column_1056964745(c_1056965843);
        }
        
        }
        
        Label2: do {
          var x_469762609 = 0;
          var y_469762610 = 0;
          var colontmp__469762611 = [];
          colontmp__469762611 = pieceExtensions_1056964663[state_1056965822.piece.kind];
          var i_469762612 = 0;
          var L_469762613 = (colontmp__469762611).length;
          Label3: do {
              Label4: while (true) {
              if (!(i_469762612 < L_469762613)) break Label4;
                x_469762609 = colontmp__469762611[i_469762612]["Field0"];
                y_469762610 = colontmp__469762611[i_469762612]["Field1"];
                var colontmp__469762627 = plusRot_1056964796(state_1056965822.piece.pos, x_469762609, y_469762610, state_1056965822.piece.rot);
                var c_469762615 = colontmp__469762627["Field0"];
                var r_469762616 = colontmp__469762627["Field1"];
                c_1056965843 = coord_1056964705(c_469762615, r_469762616);
                if ((column_1056964745(c_1056965843) < minCol_1056965842)) {
                minCol_1056965842 = column_1056964745(c_1056965843);
                }
                
                i_469762612 += 1;
              }
          } while (false);
        } while (false);
      } while (false);
      if (!((minCol_1056965842 == 0))) {
      var newPiece_1056965848 = nimCopy(null, state_1056965822.piece, NTI1056964784);
      newPiece_1056965848.pos = (newPiece_1056965848.pos - 1);
      if (!(overlaps_1056964941(state_1056965822.board, newPiece_1056965848))) {
      state_1056965822.piece = nimCopy(state_1056965822.piece, newPiece_1056965848, NTI1056964784);
      }
      
      }
      
      break;
    case "ArrowRight":
    case "Right":
      var maxCol_1056965849 = 0;
      Label5: do {
        var c_1056965850 = 0;
        if (!((state_1056965822.piece.kind == 0))) {
        c_1056965850 = state_1056965822.piece.pos;
        if ((maxCol_1056965849 < column_1056964745(c_1056965850))) {
        maxCol_1056965849 = column_1056964745(c_1056965850);
        }
        
        }
        
        Label6: do {
          var x_469762619 = 0;
          var y_469762620 = 0;
          var colontmp__469762621 = [];
          colontmp__469762621 = pieceExtensions_1056964663[state_1056965822.piece.kind];
          var i_469762622 = 0;
          var L_469762623 = (colontmp__469762621).length;
          Label7: do {
              Label8: while (true) {
              if (!(i_469762622 < L_469762623)) break Label8;
                x_469762619 = colontmp__469762621[i_469762622]["Field0"];
                y_469762620 = colontmp__469762621[i_469762622]["Field1"];
                var colontmp__469762628 = plusRot_1056964796(state_1056965822.piece.pos, x_469762619, y_469762620, state_1056965822.piece.rot);
                var c_469762625 = colontmp__469762628["Field0"];
                var r_469762626 = colontmp__469762628["Field1"];
                c_1056965850 = coord_1056964705(c_469762625, r_469762626);
                if ((maxCol_1056965849 < column_1056964745(c_1056965850))) {
                maxCol_1056965849 = column_1056964745(c_1056965850);
                }
                
                i_469762622 += 1;
              }
          } while (false);
        } while (false);
      } while (false);
      if (!((maxCol_1056965849 == 9))) {
      var newPiece_1056965855 = nimCopy(null, state_1056965822.piece, NTI1056964784);
      newPiece_1056965855.pos = (newPiece_1056965855.pos + 1);
      if (!(overlaps_1056964941(state_1056965822.board, newPiece_1056965855))) {
      state_1056965822.piece = nimCopy(state_1056965822.piece, newPiece_1056965855, NTI1056964784);
      }
      
      }
      
      break;
    default: 
      break;
    }

  
}

function keyRepeat_469762275(state_469762277, global_469762278, event_469762279) {
  
}

function keyRepeat_469762260(game_469762261, state_469762262, global_469762263, event_469762264) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

    switch (state_469762262.kind) {
    case 0:
      var Temporary1 = state_469762262;
      if (ConstSet38[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      keyRepeat_469762265(Temporary1.none, global_469762263, event_469762264);
      break;
    case 1:
      var Temporary2 = state_469762262;
      if (ConstSet39[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'initial\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI469762053)); }
      keyRepeat_469762270(Temporary2.initial, global_469762263, event_469762264);
      break;
    case 2:
      var Temporary3 = state_469762262;
      if (ConstSet40[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI469762053)); }
      keyRepeat_1056965821(Temporary3.tetris, global_469762263, event_469762264);
      break;
    case 3:
      var Temporary4 = state_469762262;
      if (ConstSet41[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI469762053)); }
      keyRepeat_469762275(Temporary4.done, global_469762263, event_469762264);
      break;
    }

  
}

function keyRepeat_469762313(game_469762314, event_469762315) {
    keyRepeat_469762260(game_469762314, game_469762314.state, game_469762314.global, event_469762315);

  
}

function keyReleased_469762285(state_469762287, global_469762288, event_469762289) {
  
}

function keyReleased_469762290(state_469762292, global_469762293, event_469762294) {
  
}

function keyReleased_1056965856(state_1056965857, global_1056965858, event_1056965859) {
    switch (toJSStr(cstrToNimstr(event_1056965859.key))) {
    case "ArrowDown":
    case "Down":
      state_1056965857.pieceDropTime = 120;
      state_1056965857.pieceDropRetries = 1;
      break;
    default: 
      break;
    }

  
}

function keyReleased_469762295(state_469762297, global_469762298, event_469762299) {
  
}

function keyReleased_469762280(game_469762281, state_469762282, global_469762283, event_469762284) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

    switch (state_469762282.kind) {
    case 0:
      var Temporary1 = state_469762282;
      if (ConstSet42[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      keyReleased_469762285(Temporary1.none, global_469762283, event_469762284);
      break;
    case 1:
      var Temporary2 = state_469762282;
      if (ConstSet43[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'initial\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI469762053)); }
      keyReleased_469762290(Temporary2.initial, global_469762283, event_469762284);
      break;
    case 2:
      var Temporary3 = state_469762282;
      if (ConstSet44[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI469762053)); }
      keyReleased_1056965856(Temporary3.tetris, global_469762283, event_469762284);
      break;
    case 3:
      var Temporary4 = state_469762282;
      if (ConstSet45[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI469762053)); }
      keyReleased_469762295(Temporary4.done, global_469762283, event_469762284);
      break;
    }

  
}

function keyReleased_469762316(game_469762317, event_469762318) {
    keyReleased_469762280(game_469762317, game_469762317.state, game_469762317.global, event_469762318);

  
}

function addListeners_469762395(game_469762396) {
    
function HEX3Aanonymous_469762397(ev_469762398) {
        var k_469762399 = ev_469762398;
        if (!(k_469762399.repeat)) {
        key_469762310(game_469762396, k_469762399);
        }
        
        keyRepeat_469762313(game_469762396, k_469762399);

      
    }
    
function HEX3Aanonymous_469762418(ev_469762419) {
        keyReleased_469762316(game_469762396, ev_469762419);

      
    }

    document.body.addEventListener("keydown", HEX3Aanonymous_469762397, false);
    document.body.addEventListener("keyup", HEX3Aanonymous_469762418, false);
    game_469762396.global.canvas.width = window.innerWidth;
    game_469762396.global.canvas.height = window.innerHeight;

  
}

function tick_469762133(state_469762135, global_469762136) {
  
}

function tick_469762137(state_469762139, global_469762140) {
  
}

function drop_1056965514(state_1056965515) {
    var spawned_1056965516 = [false];
    drop_1056965499(state_1056965515, spawned_1056965516, 0);

  
}

function tick_469762185(state_469762187, global_469762188) {
  
}

function tick_469762129(game_469762130, state_469762131, global_469762132) {
      var Temporary1;
      var Temporary2;
        var Temporary3;
      var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
      var Temporary8;
      var Temporary9;
                        var Temporary16;
                        var Temporary17;
                              var Temporary24;
                              var Temporary25;
                                var Temporary26;
                                var Temporary27;
                                var Temporary28;
                                var Temporary29;
        var Temporary32;
      var Temporary36;

    switch (state_469762131.kind) {
    case 0:
      var Temporary1 = state_469762131;
      if (ConstSet46[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      tick_469762133(Temporary1.none, global_469762132);
      break;
    case 1:
      var Temporary2 = state_469762131;
      if (ConstSet47[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'initial\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI469762053)); }
      tick_469762137(Temporary2.initial, global_469762132);
      break;
    case 2:
        var Temporary3 = state_469762131;
        if (ConstSet48[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI469762053)); }
      if (Temporary3.tetris.pieceDropTicking) {
      var Temporary4 = state_469762131;
      if (ConstSet49[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI469762053)); }
      Temporary4.tetris.pieceDropTick += 1;
        var Temporary5 = state_469762131;
        if (ConstSet50[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI469762053)); }
        var Temporary6 = state_469762131;
        if (ConstSet51[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI469762053)); }
        var Temporary7 = state_469762131;
        if (ConstSet52[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI469762053)); }
      if ((Math.trunc((Temporary5.tetris.pieceDropTime * global_469762132.fps) / 120) <= (Temporary6.tetris.pieceDropTick * Temporary7.tetris.pieceDropTickMultiplier))) {
      var Temporary8 = state_469762131;
      if (ConstSet53[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI469762053)); }
      drop_1056965514(Temporary8.tetris);
      var Temporary9 = state_469762131;
      if (ConstSet54[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI469762053)); }
      Temporary9.tetris.pieceDropTick = 0;
      }
      
      Label10: do {
        var rHEX60gensym3_469762157 = 0;
        var i_469762639 = 0;
        Label11: do {
            Label12: while (true) {
            if (!(i_469762639 < 30)) break Label12;
              rHEX60gensym3_469762157 = i_469762639;
              var anyEmptyHEX60gensym3_469762158 = false;
              Label13: do {
                var cHEX60gensym3_469762163 = 0;
                var i_469762631 = 0;
                Label14: do {
                    Label15: while (true) {
                    if (!(i_469762631 < 10)) break Label15;
                      cHEX60gensym3_469762163 = i_469762631;
                        var Temporary16 = state_469762131;
                        if (ConstSet55[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI469762053)); }
                      if (((Temporary17 = Temporary16.tetris.board, Temporary17)[coord_1056964705(cHEX60gensym3_469762163, rHEX60gensym3_469762157)] == 0)) {
                      anyEmptyHEX60gensym3_469762158 = true;
                      break Label13;
                      }
                      
                      i_469762631 += 1;
                    }
                } while (false);
              } while (false);
              if (!(anyEmptyHEX60gensym3_469762158)) {
              Label18: do {
                var riHEX60gensym3_469762173 = 0;
                var res_469762637 = rHEX60gensym3_469762157;
                Label19: do {
                    Label20: while (true) {
                    if (!(0 <= res_469762637)) break Label20;
                      riHEX60gensym3_469762173 = res_469762637;
                      Label21: do {
                        var ciHEX60gensym3_469762178 = 0;
                        var i_469762635 = 0;
                        Label22: do {
                            Label23: while (true) {
                            if (!(i_469762635 < 10)) break Label23;
                              ciHEX60gensym3_469762178 = i_469762635;
                              if ((riHEX60gensym3_469762173 == 0)) {
                              var Temporary24 = state_469762131;
                              if (ConstSet56[Temporary24.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary24.kind, NTI469762053)); }
                              (Temporary25 = Temporary24.tetris.board, Temporary25)[coord_1056964705(ciHEX60gensym3_469762178, riHEX60gensym3_469762173)] = 0;
                              }
                              else {
                                var Temporary26 = state_469762131;
                                if (ConstSet57[Temporary26.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary26.kind, NTI469762053)); }
                                var Temporary28 = state_469762131;
                                if (ConstSet58[Temporary28.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary28.kind, NTI469762053)); }
                                var Temporary30 = (Temporary27 = Temporary26.tetris.board, Temporary27)[coord_1056964705(ciHEX60gensym3_469762178, riHEX60gensym3_469762173)]; (Temporary27 = Temporary26.tetris.board, Temporary27)[coord_1056964705(ciHEX60gensym3_469762178, riHEX60gensym3_469762173)] = (Temporary29 = Temporary28.tetris.board, Temporary29)[coord_1056964705(ciHEX60gensym3_469762178, (riHEX60gensym3_469762173 - 1))]; (Temporary29 = Temporary28.tetris.board, Temporary29)[coord_1056964705(ciHEX60gensym3_469762178, (riHEX60gensym3_469762173 - 1))] = Temporary30;                              }
                              
                              i_469762635 += 1;
                            }
                        } while (false);
                      } while (false);
                      res_469762637 -= 1;
                    }
                } while (false);
              } while (false);
              }
              
              i_469762639 += 1;
            }
        } while (false);
      } while (false);
      var maxRowHEX60gensym3_469762183 = 0;
      Label31: do {
        var cHEX60gensym3_469762184 = 0;
        var colontmp__469762642 = ({kind: 0, pos: 0, rot: 0});
        var Temporary32 = state_469762131;
        if (ConstSet59[Temporary32.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary32.kind, NTI469762053)); }
        colontmp__469762642 = nimCopy(colontmp__469762642, Temporary32.tetris.piece, NTI1056964784);
        if (!((colontmp__469762642.kind == 0))) {
        cHEX60gensym3_469762184 = colontmp__469762642.pos;
        if ((maxRowHEX60gensym3_469762183 < row_1056964748(cHEX60gensym3_469762184))) {
        maxRowHEX60gensym3_469762183 = row_1056964748(cHEX60gensym3_469762184);
        }
        
        }
        
        Label33: do {
          var x_469762644 = 0;
          var y_469762645 = 0;
          var colontmp__469762646 = [];
          colontmp__469762646 = pieceExtensions_1056964663[colontmp__469762642.kind];
          var i_469762647 = 0;
          var L_469762648 = (colontmp__469762646).length;
          Label34: do {
              Label35: while (true) {
              if (!(i_469762647 < L_469762648)) break Label35;
                x_469762644 = colontmp__469762646[i_469762647]["Field0"];
                y_469762645 = colontmp__469762646[i_469762647]["Field1"];
                var colontmp__469762652 = plusRot_1056964796(colontmp__469762642.pos, x_469762644, y_469762645, colontmp__469762642.rot);
                var c_469762650 = colontmp__469762652["Field0"];
                var r_469762651 = colontmp__469762652["Field1"];
                cHEX60gensym3_469762184 = coord_1056964705(c_469762650, r_469762651);
                if ((maxRowHEX60gensym3_469762183 < row_1056964748(cHEX60gensym3_469762184))) {
                maxRowHEX60gensym3_469762183 = row_1056964748(cHEX60gensym3_469762184);
                }
                
                i_469762647 += 1;
              }
          } while (false);
        } while (false);
      } while (false);
      if ((maxRowHEX60gensym3_469762183 < 10)) {
      switch_469762074(game_469762130, 1);
      }
      
      }
      
      break;
    case 3:
      var Temporary36 = state_469762131;
      if (ConstSet60[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI469762053)); }
      tick_469762185(Temporary36.done, global_469762132);
      break;
    }

  
}

function tick_469762304(game_469762305) {
    tick_469762129(game_469762305, game_469762305.state, game_469762305.global);

  
}

function preRender_1040187429(global_1040187430) {
    global_1040187430.context.fillStyle = "#00000000";
    global_1040187430.context.strokeStyle = "#00000000";
    global_1040187430.context.clearRect(0, 0, global_1040187430.canvas.width, global_1040187430.canvas.height);

  
}

function render_469762195(state_469762197, global_469762198, windowWidth_469762199, windowHeight_469762200) {
  
}

function min_33556194(x_33556195, y_33556196) {
    var Temporary1;
      var Temporary2;

  var result_33556197 = 0.0;

      if ((x_33556195 <= y_33556196)) Temporary2 = true; else {        Temporary2 = !((y_33556196 == y_33556196));      }    if (Temporary2) {
    Temporary1 = x_33556195;
    }
    else {
    Temporary1 = y_33556196;
    }
    
    result_33556197 = Temporary1;

  return result_33556197;

}

function overlapsOrOOB_1056964959(board_1056964960, piece_1056964961) {
        var Temporary2;
                var Temporary6;

  var result_1056964962 = [false];

  BeforeRet: do {
    result_1056964962[0] = false;
    Label1: do {
      var c_1056964963 = 0;
      if (!((piece_1056964961.kind == 0))) {
      c_1056964963 = piece_1056964961.pos;
        if (result_1056964962[0]) Temporary2 = true; else {          Temporary2 = !((board_1056964960[c_1056964963] == 0));        }      if (Temporary2) {
      result_1056964962[0] = true;
      break BeforeRet;
      }
      
      }
      
      Label3: do {
        var x_469762740 = 0;
        var y_469762741 = 0;
        var colontmp__469762742 = [];
        colontmp__469762742 = pieceExtensions_1056964663[piece_1056964961.kind];
        var i_469762743 = 0;
        var L_469762744 = (colontmp__469762742).length;
        Label4: do {
            Label5: while (true) {
            if (!(i_469762743 < L_469762744)) break Label5;
              x_469762740 = colontmp__469762742[i_469762743]["Field0"];
              y_469762741 = colontmp__469762742[i_469762743]["Field1"];
              var colontmp__469762748 = plusRot_1056964796(piece_1056964961.pos, x_469762740, y_469762741, piece_1056964961.rot);
              var col_469762746 = colontmp__469762748["Field0"];
              var row_469762747 = colontmp__469762748["Field1"];
              if ((contains_1056964835(col_469762746) && contains_1056964877(row_469762747))) {
              c_1056964963 = coord_1056964705(col_469762746, row_469762747);
                if (result_1056964962[0]) Temporary6 = true; else {                  Temporary6 = !((board_1056964960[c_1056964963] == 0));                }              if (Temporary6) {
              result_1056964962[0] = true;
              break BeforeRet;
              }
              
              }
              else {
                result_1056964962[0] = true;
                break Label3;
              }
              
              i_469762743 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
  } while (false);

  return result_1056964962[0];

}

function render_1056965527(state_1056965528, global_1056965529, windowWidth_1056965530, windowHeight_1056965531) {
      var Temporary2;
    var Temporary14;
    var Temporary15;
            var Temporary32;

    Label1: do {
      var a_1056965536 = HEX2F_33557575(((windowWidth_1056965530) | 0), 960);
      var b_1056965537 = HEX2F_33557575(((windowHeight_1056965531) | 0), 540);
      if (!((a_1056965536 == b_1056965537))) {
      var newRatio_1056965538 = min_33556194(a_1056965536, b_1056965537);
      Temporary2 = {Field0: (newRatio_1056965538 * 960.0), Field1: (newRatio_1056965538 * 540.0)};
      }
      else {
      Temporary2 = {Field0: windowWidth_1056965530, Field1: windowHeight_1056965531};
      }
      
    } while (false);
    var colontmp__469762733 = nimCopy(null, Temporary2, NTI1056965396);
    var scaledWindowWidth_1056965539 = colontmp__469762733["Field0"];
    var scaledWindowHeight_1056965540 = colontmp__469762733["Field1"];
    var startX_1056965541 = ((windowWidth_1056965530 - scaledWindowWidth_1056965539) / 2.0);
    var startY_1056965542 = ((windowHeight_1056965531 - scaledWindowHeight_1056965540) / 2.0);
    var scaledTileWidth_1056965569 = ((Math.ceil(((27.0 * scaledWindowWidth_1056965539) / 960.0))) | 0);
    var scaledTileHeight_1056965571 = ((Math.ceil(((27.0 * scaledWindowHeight_1056965540) / 540.0))) | 0);
    global_1056965529.context.fillStyle = "rgba(80,80,80,1.0)";
    global_1056965529.context.strokeStyle = "rgba(80,80,80,1.0)";
    global_1056965529.context.beginPath();
    global_1056965529.context.rect((((((startX_1056965541) | 0) + ((((707.0 * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0), (((startY_1056965542 + ((45.0 * scaledWindowWidth_1056965539) / 960.0))) | 0), ((Math.ceil(((75.0 * scaledWindowWidth_1056965539) / 960.0))) | 0), ((Math.ceil(((255.0 * scaledWindowHeight_1056965540) / 540.0))) | 0));
    global_1056965529.context.stroke();
    Label3: do {
      var i_1056965625 = 0;
      var p_1056965626 = ({kind: 0, pos: 0, rot: 0});
      var i_469762678 = 0;
      Label4: do {
          Label5: while (true) {
          if (!true) break Label5;
            i_1056965625 = i_469762678;
            p_1056965626 = nimCopy(p_1056965626, state_1056965528.nextPieces[i_469762678], NTI1056964784);
            global_1056965529.context.fillStyle = pieceColors_1056964628[p_1056965626.kind];
            global_1056965529.context.strokeStyle = pieceColors_1056964628[p_1056965626.kind];
            var maxX_1056965627 = 0;
            var maxY_1056965628 = 0;
            Label6: do {
              var c_1056965629 = 0;
              if (!((p_1056965626.kind == 0))) {
              c_1056965629 = p_1056965626.pos;
              if ((maxX_1056965627 < column_1056964745(c_1056965629))) {
              maxX_1056965627 = column_1056964745(c_1056965629);
              }
              
              if ((maxY_1056965628 < row_1056964748(c_1056965629))) {
              maxY_1056965628 = row_1056964748(c_1056965629);
              }
              
              }
              
              Label7: do {
                var x_469762657 = 0;
                var y_469762658 = 0;
                var colontmp__469762659 = [];
                colontmp__469762659 = pieceExtensions_1056964663[p_1056965626.kind];
                var i_469762660 = 0;
                var L_469762661 = (colontmp__469762659).length;
                Label8: do {
                    Label9: while (true) {
                    if (!(i_469762660 < L_469762661)) break Label9;
                      x_469762657 = colontmp__469762659[i_469762660]["Field0"];
                      y_469762658 = colontmp__469762659[i_469762660]["Field1"];
                      var colontmp__469762734 = plusRot_1056964796(p_1056965626.pos, x_469762657, y_469762658, p_1056965626.rot);
                      var c_469762663 = colontmp__469762734["Field0"];
                      var r_469762664 = colontmp__469762734["Field1"];
                      c_1056965629 = coord_1056964705(c_469762663, r_469762664);
                      if ((maxX_1056965627 < column_1056964745(c_1056965629))) {
                      maxX_1056965627 = column_1056964745(c_1056965629);
                      }
                      
                      if ((maxY_1056965628 < row_1056964748(c_1056965629))) {
                      maxY_1056965628 = row_1056964748(c_1056965629);
                      }
                      
                      i_469762660 += 1;
                    }
                } while (false);
              } while (false);
            } while (false);
            var width_1056965632 = (maxX_1056965627 + 1);
            var height_1056965633 = (maxY_1056965628 + 1);
            var unit_1056965634 = (45.0 / nimMax(width_1056965632, height_1056965633));
            var tileWidth_1056965636 = ((Math.ceil(((unit_1056965634 * scaledWindowWidth_1056965539) / 960.0))) | 0);
            var tileHeight_1056965638 = ((Math.ceil(((unit_1056965634 * scaledWindowHeight_1056965540) / 540.0))) | 0);
            var tileXStart_1056965639 = (722.0 + ((45.0 - (width_1056965632 * unit_1056965634)) / 2.0));
            var tileYStart_1056965640 = ((60.0 + (i_1056965625 * 60.0)) + ((45.0 - (height_1056965633 * unit_1056965634)) / 2.0));
            Label10: do {
              var c_1056965641 = 0;
              if (!((p_1056965626.kind == 0))) {
              c_1056965641 = p_1056965626.pos;
              var x_1056965644 = (((startX_1056965541 + ((((column_1056964745(c_1056965641) * unit_1056965634) + tileXStart_1056965639) * scaledWindowWidth_1056965539) / 960.0))) | 0);
              var y_1056965647 = (((startY_1056965542 + ((((row_1056964748(c_1056965641) * unit_1056965634) + tileYStart_1056965640) * scaledWindowWidth_1056965539) / 960.0))) | 0);
              global_1056965529.context.fillRect(x_1056965644, y_1056965647, tileWidth_1056965636, tileHeight_1056965638);
              }
              
              Label11: do {
                var x_469762667 = 0;
                var y_469762668 = 0;
                var colontmp__469762669 = [];
                colontmp__469762669 = pieceExtensions_1056964663[p_1056965626.kind];
                var i_469762670 = 0;
                var L_469762671 = (colontmp__469762669).length;
                Label12: do {
                    Label13: while (true) {
                    if (!(i_469762670 < L_469762671)) break Label13;
                      x_469762667 = colontmp__469762669[i_469762670]["Field0"];
                      y_469762668 = colontmp__469762669[i_469762670]["Field1"];
                      var colontmp__469762735 = plusRot_1056964796(p_1056965626.pos, x_469762667, y_469762668, p_1056965626.rot);
                      var c_469762673 = colontmp__469762735["Field0"];
                      var r_469762674 = colontmp__469762735["Field1"];
                      c_1056965641 = coord_1056964705(c_469762673, r_469762674);
                      var x_469762675 = (((startX_1056965541 + ((((column_1056964745(c_1056965641) * unit_1056965634) + tileXStart_1056965639) * scaledWindowWidth_1056965539) / 960.0))) | 0);
                      var y_469762676 = (((startY_1056965542 + ((((row_1056964748(c_1056965641) * unit_1056965634) + tileYStart_1056965640) * scaledWindowWidth_1056965539) / 960.0))) | 0);
                      global_1056965529.context.fillRect(x_469762675, y_469762676, tileWidth_1056965636, tileHeight_1056965638);
                      i_469762670 += 1;
                    }
                } while (false);
              } while (false);
            } while (false);
            if ((3 <= i_469762678)) {
            break Label4;
            }
            
            i_469762678 += 1;
          }
      } while (false);
    } while (false);
    global_1056965529.context.fillStyle = "rgba(80,80,80,1.0)";
    global_1056965529.context.strokeStyle = "rgba(80,80,80,1.0)";
    global_1056965529.context.beginPath();
    global_1056965529.context.rect((((startX_1056965541 + ((195.0 * scaledWindowWidth_1056965539) / 960.0))) | 0), (((startY_1056965542 + ((45.0 * scaledWindowWidth_1056965539) / 960.0))) | 0), ((Math.ceil(((75.0 * scaledWindowWidth_1056965539) / 960.0))) | 0), ((Math.ceil(((75.0 * scaledWindowHeight_1056965540) / 540.0))) | 0));
    global_1056965529.context.stroke();
    if (!((state_1056965528.holdPiece.kind == 0))) {
    if (state_1056965528.justHeld) {
    Temporary14 = "rgba(60,60,60,1.0)";
    }
    else {
    Temporary14 = pieceColors_1056964628[state_1056965528.holdPiece.kind];
    }
    
    global_1056965529.context.fillStyle = Temporary14;
    if (state_1056965528.justHeld) {
    Temporary15 = "rgba(60,60,60,1.0)";
    }
    else {
    Temporary15 = pieceColors_1056964628[state_1056965528.holdPiece.kind];
    }
    
    global_1056965529.context.strokeStyle = Temporary15;
    var maxX_1056965680 = 0;
    var maxY_1056965681 = 0;
    Label16: do {
      var c_1056965682 = 0;
      if (!((state_1056965528.holdPiece.kind == 0))) {
      c_1056965682 = state_1056965528.holdPiece.pos;
      if ((maxX_1056965680 < column_1056964745(c_1056965682))) {
      maxX_1056965680 = column_1056964745(c_1056965682);
      }
      
      if ((maxY_1056965681 < row_1056964748(c_1056965682))) {
      maxY_1056965681 = row_1056964748(c_1056965682);
      }
      
      }
      
      Label17: do {
        var x_469762682 = 0;
        var y_469762683 = 0;
        var colontmp__469762684 = [];
        colontmp__469762684 = pieceExtensions_1056964663[state_1056965528.holdPiece.kind];
        var i_469762685 = 0;
        var L_469762686 = (colontmp__469762684).length;
        Label18: do {
            Label19: while (true) {
            if (!(i_469762685 < L_469762686)) break Label19;
              x_469762682 = colontmp__469762684[i_469762685]["Field0"];
              y_469762683 = colontmp__469762684[i_469762685]["Field1"];
              var colontmp__469762736 = plusRot_1056964796(state_1056965528.holdPiece.pos, x_469762682, y_469762683, state_1056965528.holdPiece.rot);
              var c_469762688 = colontmp__469762736["Field0"];
              var r_469762689 = colontmp__469762736["Field1"];
              c_1056965682 = coord_1056964705(c_469762688, r_469762689);
              if ((maxX_1056965680 < column_1056964745(c_1056965682))) {
              maxX_1056965680 = column_1056964745(c_1056965682);
              }
              
              if ((maxY_1056965681 < row_1056964748(c_1056965682))) {
              maxY_1056965681 = row_1056964748(c_1056965682);
              }
              
              i_469762685 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    var width_1056965684 = (maxX_1056965680 + 1);
    var height_1056965685 = (maxY_1056965681 + 1);
    var unit_1056965686 = (45.0 / nimMax(width_1056965684, height_1056965685));
    var tileWidth_1056965688 = ((Math.ceil(((unit_1056965686 * scaledWindowWidth_1056965539) / 960.0))) | 0);
    var tileHeight_1056965690 = ((Math.ceil(((unit_1056965686 * scaledWindowHeight_1056965540) / 540.0))) | 0);
    var tileXStart_1056965691 = (210.0 + ((45.0 - (width_1056965684 * unit_1056965686)) / 2.0));
    var tileYStart_1056965692 = (60.0 + ((45.0 - (height_1056965685 * unit_1056965686)) / 2.0));
    Label20: do {
      var c_1056965693 = 0;
      if (!((state_1056965528.holdPiece.kind == 0))) {
      c_1056965693 = state_1056965528.holdPiece.pos;
      var x_1056965696 = (((startX_1056965541 + ((((column_1056964745(c_1056965693) * unit_1056965686) + tileXStart_1056965691) * scaledWindowWidth_1056965539) / 960.0))) | 0);
      var y_1056965699 = (((startY_1056965542 + ((((row_1056964748(c_1056965693) * unit_1056965686) + tileYStart_1056965692) * scaledWindowWidth_1056965539) / 960.0))) | 0);
      global_1056965529.context.fillRect(x_1056965696, y_1056965699, tileWidth_1056965688, tileHeight_1056965690);
      }
      
      Label21: do {
        var x_469762692 = 0;
        var y_469762693 = 0;
        var colontmp__469762694 = [];
        colontmp__469762694 = pieceExtensions_1056964663[state_1056965528.holdPiece.kind];
        var i_469762695 = 0;
        var L_469762696 = (colontmp__469762694).length;
        Label22: do {
            Label23: while (true) {
            if (!(i_469762695 < L_469762696)) break Label23;
              x_469762692 = colontmp__469762694[i_469762695]["Field0"];
              y_469762693 = colontmp__469762694[i_469762695]["Field1"];
              var colontmp__469762737 = plusRot_1056964796(state_1056965528.holdPiece.pos, x_469762692, y_469762693, state_1056965528.holdPiece.rot);
              var c_469762698 = colontmp__469762737["Field0"];
              var r_469762699 = colontmp__469762737["Field1"];
              c_1056965693 = coord_1056964705(c_469762698, r_469762699);
              var x_469762700 = (((startX_1056965541 + ((((column_1056964745(c_1056965693) * unit_1056965686) + tileXStart_1056965691) * scaledWindowWidth_1056965539) / 960.0))) | 0);
              var y_469762701 = (((startY_1056965542 + ((((row_1056964748(c_1056965693) * unit_1056965686) + tileYStart_1056965692) * scaledWindowWidth_1056965539) / 960.0))) | 0);
              global_1056965529.context.fillRect(x_469762700, y_469762701, tileWidth_1056965688, tileHeight_1056965690);
              i_469762695 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    }
    
    Label24: do {
      var rowI_1056965714 = 0;
      var i_469762706 = 10;
      Label25: do {
          Label26: while (true) {
          if (!(i_469762706 < 30)) break Label26;
            rowI_1056965714 = i_469762706;
            Label27: do {
              var colI_1056965719 = 0;
              var i_469762704 = 0;
              Label28: do {
                  Label29: while (true) {
                  if (!(i_469762704 < 10)) break Label29;
                    colI_1056965719 = i_469762704;
                    var p_1056965720 = state_1056965528.board[coord_1056964705(colI_1056965719, rowI_1056965714)];
                    var x_1056965723 = (((((startX_1056965541) | 0) + ((((((colI_1056965719 * 27) + 345) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
                    var y_1056965726 = (((((startY_1056965542) | 0) + ((((((rowI_1056965714 - 10) * 27) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
                    if (!((p_1056965720 == 0))) {
                    global_1056965529.context.fillStyle = pieceColors_1056964628[p_1056965720];
                    global_1056965529.context.strokeStyle = pieceColors_1056964628[p_1056965720];
                    global_1056965529.context.fillRect(x_1056965723, y_1056965726, scaledTileWidth_1056965569, scaledTileHeight_1056965571);
                    }
                    
                    global_1056965529.context.fillStyle = "rgba(80,80,80,1.0)";
                    global_1056965529.context.strokeStyle = "rgba(80,80,80,1.0)";
                    global_1056965529.context.beginPath();
                    global_1056965529.context.rect(x_1056965723, y_1056965726, scaledTileWidth_1056965569, scaledTileHeight_1056965571);
                    global_1056965529.context.stroke();
                    i_469762704 += 1;
                  }
              } while (false);
            } while (false);
            i_469762706 += 1;
          }
      } while (false);
    } while (false);
    var shadowPiece_1056965751 = nimCopy(null, state_1056965528.piece, NTI1056964784);
    Label30: do {
        Label31: while (true) {
        if (!true) break Label31;
          var oldPos_1056965752 = shadowPiece_1056965751.pos;
          var newRow_1056965753 = (row_1056964748(oldPos_1056965752) + 1);
            if (!(contains_1056964877(newRow_1056965753))) Temporary32 = true; else {              shadowPiece_1056965751.pos = coord_1056964705(column_1056964745(oldPos_1056965752), newRow_1056965753);
              Temporary32 = overlapsOrOOB_1056964959(state_1056965528.board, shadowPiece_1056965751);            }          if (Temporary32) {
          shadowPiece_1056965751.pos = oldPos_1056965752;
          break Label30;
          }
          
        }
    } while (false);
    global_1056965529.context.fillStyle = "rgba(200,200,200,1.0)";
    global_1056965529.context.strokeStyle = "rgba(200,200,200,1.0)";
    Label33: do {
      var c_1056965760 = 0;
      if (!((shadowPiece_1056965751.kind == 0))) {
      c_1056965760 = shadowPiece_1056965751.pos;
      if ((10 <= row_1056964748(c_1056965760))) {
      var x_1056965763 = (((((startX_1056965541) | 0) + ((((((column_1056964745(c_1056965760) * 27) + 345) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
      var y_1056965766 = (((((startY_1056965542) | 0) + ((((((row_1056964748(c_1056965760) - 10) * 27) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
      global_1056965529.context.fillRect(x_1056965763, y_1056965766, scaledTileWidth_1056965569, scaledTileHeight_1056965571);
      }
      
      }
      
      Label34: do {
        var x_469762711 = 0;
        var y_469762712 = 0;
        var colontmp__469762713 = [];
        colontmp__469762713 = pieceExtensions_1056964663[shadowPiece_1056965751.kind];
        var i_469762714 = 0;
        var L_469762715 = (colontmp__469762713).length;
        Label35: do {
            Label36: while (true) {
            if (!(i_469762714 < L_469762715)) break Label36;
              x_469762711 = colontmp__469762713[i_469762714]["Field0"];
              y_469762712 = colontmp__469762713[i_469762714]["Field1"];
              var colontmp__469762749 = plusRot_1056964796(shadowPiece_1056965751.pos, x_469762711, y_469762712, shadowPiece_1056965751.rot);
              var c_469762717 = colontmp__469762749["Field0"];
              var r_469762718 = colontmp__469762749["Field1"];
              c_1056965760 = coord_1056964705(c_469762717, r_469762718);
              if ((10 <= row_1056964748(c_1056965760))) {
              var x_469762719 = (((((startX_1056965541) | 0) + ((((((column_1056964745(c_1056965760) * 27) + 345) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
              var y_469762720 = (((((startY_1056965542) | 0) + ((((((row_1056964748(c_1056965760) - 10) * 27) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
              global_1056965529.context.fillRect(x_469762719, y_469762720, scaledTileWidth_1056965569, scaledTileHeight_1056965571);
              }
              
              i_469762714 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    global_1056965529.context.fillStyle = pieceColors_1056964628[state_1056965528.piece.kind];
    global_1056965529.context.strokeStyle = pieceColors_1056964628[state_1056965528.piece.kind];
    Label37: do {
      var c_1056965777 = 0;
      if (!((state_1056965528.piece.kind == 0))) {
      c_1056965777 = state_1056965528.piece.pos;
      if ((10 <= row_1056964748(c_1056965777))) {
      var x_1056965780 = (((((startX_1056965541) | 0) + ((((((column_1056964745(c_1056965777) * 27) + 345) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
      var y_1056965783 = (((((startY_1056965542) | 0) + ((((((row_1056964748(c_1056965777) - 10) * 27) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
      global_1056965529.context.fillRect(x_1056965780, y_1056965783, scaledTileWidth_1056965569, scaledTileHeight_1056965571);
      }
      
      }
      
      Label38: do {
        var x_469762723 = 0;
        var y_469762724 = 0;
        var colontmp__469762725 = [];
        colontmp__469762725 = pieceExtensions_1056964663[state_1056965528.piece.kind];
        var i_469762726 = 0;
        var L_469762727 = (colontmp__469762725).length;
        Label39: do {
            Label40: while (true) {
            if (!(i_469762726 < L_469762727)) break Label40;
              x_469762723 = colontmp__469762725[i_469762726]["Field0"];
              y_469762724 = colontmp__469762725[i_469762726]["Field1"];
              var colontmp__469762750 = plusRot_1056964796(state_1056965528.piece.pos, x_469762723, y_469762724, state_1056965528.piece.rot);
              var c_469762729 = colontmp__469762750["Field0"];
              var r_469762730 = colontmp__469762750["Field1"];
              c_1056965777 = coord_1056964705(c_469762729, r_469762730);
              if ((10 <= row_1056964748(c_1056965777))) {
              var x_469762731 = (((((startX_1056965541) | 0) + ((((((column_1056964745(c_1056965777) * 27) + 345) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
              var y_469762732 = (((((startY_1056965542) | 0) + ((((((row_1056964748(c_1056965777) - 10) * 27) * scaledWindowHeight_1056965540) / 540.0)) | 0))) | 0);
              global_1056965529.context.fillRect(x_469762731, y_469762732, scaledTileWidth_1056965569, scaledTileHeight_1056965571);
              }
              
              i_469762726 += 1;
            }
        } while (false);
      } while (false);
    } while (false);

  
}

function render_469762212(state_469762214, global_469762215, windowWidth_469762216, windowHeight_469762217) {
  
}

function render_469762189(game_469762190, state_469762191, global_469762192, windowWidth_469762193, windowHeight_469762194) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

    switch (state_469762191.kind) {
    case 0:
      var Temporary1 = state_469762191;
      if (ConstSet61[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'none\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI469762053)); }
      render_469762195(Temporary1.none, global_469762192, windowWidth_469762193, windowHeight_469762194);
      break;
    case 1:
      var Temporary2 = state_469762191;
      if (ConstSet62[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'initial\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI469762053)); }
      global_469762192.context.drawImage(Temporary2.initial.background, 0, 0, windowWidth_469762193, windowHeight_469762194);
      break;
    case 2:
      var Temporary3 = state_469762191;
      if (ConstSet63[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'tetris\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI469762053)); }
      render_1056965527(Temporary3.tetris, global_469762192, windowWidth_469762193, windowHeight_469762194);
      break;
    case 3:
      var Temporary4 = state_469762191;
      if (ConstSet64[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'done\' is not accessible for type \'State\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI469762053)); }
      render_469762212(Temporary4.done, global_469762192, windowWidth_469762193, windowHeight_469762194);
      break;
    }

  
}

function render_469762306(game_469762307) {
    var windowWidth_469762308 = ((game_469762307.global.canvas.width) | 0);
    var windowHeight_469762309 = ((game_469762307.global.canvas.height) | 0);
    render_469762189(game_469762307, game_469762307.state, game_469762307.global, windowWidth_469762308, windowHeight_469762309);

  
}

function postRender_1040187446(global_1040187447) {
  
}

function singleLoop_469762432(game_469762433) {
    tick_469762304(game_469762433);
    preRender_1040187429(game_469762433.global);
    render_469762306(game_469762433);
    postRender_1040187446(game_469762433.global);
    game_469762433.global.numTicks += 1;

  
}
async function mainLoop_469762458(game_469762459) {
    
function frame_469762468(timestamp_469762469) {
        game_469762459.global.fps = (((1000.0 / (timestamp_469762469 - lastTimestamp_469762467))) | 0);
        singleLoop_469762432(game_469762459);
        lastTimestamp_469762467 = timestamp_469762469;
        var _ = window.requestAnimationFrame(frame_469762468);

      
    }

  var result_469762461 = null;

  BeforeRet: do {
    addListeners_469762395(game_469762459);
    var lastTimestamp_469762467 = 0.0;
    var _ = window.requestAnimationFrame(frame_469762468);
    result_469762461 = undefined;
    break BeforeRet;
  } while (false);

  return result_469762461;

}

function finish_469762393(game_469762394, game_469762394_Idx) {
  
}

function main_469762479() {
    var Temporary1;
    var Temporary3;

    var game_469762480 = [null];
    init_469762343(game_469762480, 0);
    Temporary3 = framePtr;
    try {
    Temporary1 = mainLoop_469762458(game_469762480[0]);
    } finally {
    framePtr = Temporary3;
    finish_469762393(game_469762480, 0);
    }
    Temporary1;

  
}
main_469762479();
